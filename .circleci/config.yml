version: 2.0

jobs:

  # Job: run-unit-tests
  #   Execute `gradle test` to run unit tests on the target commit.
  run-unit-tests:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      # ===== Initialize the environment
      - checkout
      - run:
          name: Set up git-submodule
          command: git submodule update --init
      - run:
          name: Merge multiple Gradle settings to enable CircleCI's cache
          command: cat main/build.gradle node/build.gradle > current_settings
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "current_settings" }}
          - v1-dependencies-
      - run: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "current_settings" }}
      # ===== Run `gradle test`
      - run: ./gradlew test
      # ===== Collect and upload test results
      - run:
          name: Collect test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

workflows:
  version: 2

  # Workflow: test-branches
  #   Execute the unit tests on every branch on the GitHub.
  test-branches:
    jobs:
      - run-unit-tests
